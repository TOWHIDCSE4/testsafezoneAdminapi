org: safezoneapp
app: admin-safe-zone-app
service: admin-safe-zone-app
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-southeast-1
  deploymentMethod: direct
  timeout: 60
  versionFunctions: true

  # VPC Configuration
  # vpc:
  #   securityGroupIds:
  #     - !GetAtt NatGatewayLambdaSecurityGroup.GroupId
  #   subnetIds:
  #     - !Ref SubnetAPrivate
  #     - !Ref SubnetBPrivate
  iam:
    role:
      statements:
        # Allow functions to list all buckets
        - Effect: Allow
          Action:
            - 'ec2:DescribeNetworkInterfaces'
            - 'ec2:CreateNetworkInterface'
            - 'ec2:DeleteNetworkInterface'
            - 'ec2:DescribeInstances'
            - 'ec2:AttachNetworkInterface'
          Resource: '*'
        - Effect: Allow
          Action:
            - 's3:PutObjectAcl'
            - 's3:PutObject'
            - 's3:GetObjectAcl'
            - 's3:ListBucket'
            - 's3:GetBucketLocation'
          Resource: '*'
        - Effect: Allow
          Action:
            - 'cognito-identity:*'
            - 'cognito-idp:*'
          Resource: '*'
        - Effect: Allow
          Action:
            - 'ses:*'
          Resource: '*'
  environment:
    AWS_COGNITO_REGION: ap-southeast-1
    ZVELO_CLOUD_USERNAME: ${param:ZVELO_CLOUD_USERNAME, ''}
    ZVELO_CLOUD_PASSWORD: ${param:ZVELO_CLOUD_PASSWORD, ''}
    MONGODB_URI: ${param:MONGODB_URI, 'mongodb+srv://safezone-php:2023safezonephp@safezoneapi-dev.qxco0.mongodb.net/'}
    AWS_GATEWAY_API_URL: !Sub 'https://${ApiGatewayRestApi}.execute-api.${aws:region}.amazonaws.com/${sls:stage}'
    APPOTA_PARTNER_CODE: ${param:APPOTA_PARTNER_CODE, 'APPOTAPAY'}
    APPOTA_API_KEY: ${param:APPOTA_API_KEY, 'FJcmF8uj2ISveL5FvvNk4pnp8xrhINz8'}
    APPOTA_SECRET_KEY: ${param:APPOTA_SECRET_KEY, 'XAonJgy14YhtePEITXhyBS2unjfJLAV3'}
    APPOTA_ENDPOINT: ${param:APPOTA_ENDPOINT, 'https://payment.dev.appotapay.com/api'}
    SAFE_ZONE_PORTAL_URL: ${param:SAFE_ZONE_PORTAL_URL, ''}
    S3_PUBLIC_BUCKET_NAME: !Ref AttachmentsBucket
    SERVER_TYPE: ${param:SAFE_ZONE_SERVER_TYPE, 'local'}
    AWS_COGNITO_USER_POOL_ID: ap-southeast-1_qQNaEBiSk
    AWS_COGNITO_APP_CLIENT_ID: 1eidhbgo28qsa36nlri9pffplc
    S3_PUBLIC_BUCKET_DOMAIN: xxxxx
    S3_ASSETS_BUCKET_DOMAIN: xxxxx
    SES_EMAIL: no-reply@safezone.com.vn
    OPEN_AI_URI: ${param:OPEN_AI_URI, 'https://api.openai.com'}


plugins:
  - serverless-functions-base-path
  - serverless-webpack
  - serverless-export-env
  - serverless-mongodb-local
  - serverless-s3-sync
  - serverless-offline
  - serverless-offline-scheduler
  - serverless-prune-plugin
resources:
  - ${file(config/apigateway-authorizer.yml)}
  - ${file(config/cognito.yml)}
  - ${file(config/s3-bucket.yml)}
  # - ${file(config/vpc.yml)}

custom:
  functionsBasePath: src/handlers
  serverless-offline:
    port: 4001
  webpack:
    packager: npm
    includeModules: true
  mongodb:
    stages: # If you only want to use MongoDB Local in particular stages, declare them here as a string or regex
      - dev
      - 'dev-\d+'
    instance: # MongoMemoryServer() options and defaults https://github.com/nodkz/mongodb-memory-server#available-options-for-mongomemoryserver
      port: 6868
      dbName: SafeZone
      dbPath: ./db
      storageEngine: wiredTiger # Set with `dbPath` to persists the database between instantiations
  s3Sync:
    - bucketNameKey: AssetsBucketName
      localDir: src/assets # required
  prune:
    automatic: true
    number: 3

functions:
  - ${file(./src/handlers/admin/auth/serverless.yml)}
  - ${file(./src/handlers/admin/users/serverless.yml)}
  - ${file(./src/handlers/admin/subscriptions/serverless.yml)}
  - ${file(./src/handlers/admin/roles/serverless.yml)}
  - ${file(./src/handlers/admin/permissions/serverless.yml)}
  - ${file(./src/handlers/admin/employees/serverless.yml)}
  - ${file(./src/handlers/admin/categoryDomain/serverless.yml)}
  - ${file(./src/handlers/admin/AI/serverless.yml)}
  - ${file(./src/handlers/admin/templates/serverless.yml)}
